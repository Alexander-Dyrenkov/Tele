<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="10 seconds">

    <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>log/DEBUG.current.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>log/CNN-core-%d{yyyy-MM-dd-HH}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 50MB -->
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d [%thread] id_%X{msg_id} %-5level %logger{36} %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="MONITORING_ALARM" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>monitoring/alarm-%d{yyyy-MM-dd-HH}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 50MB -->
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%msg%n</pattern>
        </encoder>
    </appender>

    <appender name="MONITORING_STATE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>monitoring/state-%d{yyyy-MM-dd-HH}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 50MB -->
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%msg%n</pattern>
        </encoder>
    </appender>

    <appender name="MONITORING_STATISTICS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>monitoring/statistics-%d{yyyy-MM-dd-HH}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 50MB -->
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%msg%n</pattern>
        </encoder>
    </appender>

    <logger name="monitoring.alarm" level="DEBUG" additivity="false">
        <appender-ref ref="MONITORING_ALARM"/>
    </logger>

    <logger name="monitoring.state" level="DEBUG" additivity="false">
        <appender-ref ref="MONITORING_STATE"/>
    </logger>

    <logger name="monitoring.statistics" level="DEBUG" additivity="false">
        <appender-ref ref="MONITORING_STATISTICS"/>
    </logger>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d [%thread] %-5level id_%X{msg_id} %logger{36}:%line %msg%n</pattern>
        </encoder>
    </appender>

    <logger name="ru.lanit.osp.cnn" level="DEBUG"/>
    <logger name="ru.lanit" level="INFO"/>
    <logger name="ru.osp" level="DEBUG"/>
    <logger name="ru.lanit.osp.commons" level="INFO"/>
    <logger name="ru.lanit.commons" level="INFO"/>
    <logger name="ru.lanit.osp.commons.statistic.model.AbstractStatisticManager" level="ERROR"/>

    <root level="WARN">
        <appender-ref ref="DEBUG"/>
        <appender-ref ref="console"/>
    </root>
</configuration>
